###***************************
#      Highlightの定義
#**************************
###

ace.define 'ace/mode/amd_highlight_rules', [
  'require'
  'exports'
  'module'
  'ace/lib/oop'
  'ace/mode/text_highlight_rules'
], (require, exports, module) ->
  'use strict'
  oop = require('../lib/oop')
  TextHighlightRules = require('./text_highlight_rules').TextHighlightRules

  SampleHighlightRules = ->
    varWordMapper = @createKeywordMapper({}, 'invalid', false, ' ')
    @$rules =
      'start': [
        {
          token: 'title'
          regex: /【(.*?)】/
        }
        {
          token: 'subtitle'
          regex: /■(.*)/
        }
        {
          token: 'smalltitle'
          regex: /・(.*)/
        }
        {
          token: 'indent'
          regex: /→(.*)/
        }
      ]
    return

  oop.inherits SampleHighlightRules, TextHighlightRules
  exports.SampleHighlightRules = SampleHighlightRules
  return

###***************************
#      Indentの定義(？)
#      未使用
#      無くても問題なかった
#**************************
###

ace.define 'ace/mode/matching_brace_outdent', [
  'require'
  'exports'
  'module'
  'ace/range'
], (require, exports, module) ->

###***************************
#      Modeの定義
#      1.  先頭の define でmode/amdを定義
#      2.  `var SampleHighlightRules = require("./amd_highlight_rules").SampleHighlightRules;`
#          の用にRuleを読み込む
#      3.  `this.HighlightRules = SampleHighlightRules;` Modeに代入
# ***************************
###

ace.define 'ace/mode/amd', [
  'require'
  'exports'
  'module'
  'ace/lib/oop'
  'ace/mode/amd_highlight_rules'
  'ace/mode/matching_brace_outdent'
  'ace/range'
  'ace/worker/worker_client'
], (require, exports, module) ->
  'use strict'
  oop = require('../lib/oop')
  TextMode = require('./text').Mode
  # Rule読み込み
  SampleHighlightRules = require('./amd_highlight_rules').SampleHighlightRules

  #var MatchingBraceOutdent = require("./matching_brace_outdent").MatchingBraceOutdent;
  Range = require('../range').Range
  WorkerClient = require('../worker/worker_client').WorkerClient

  Mode = ->
    @HighlightRules = SampleHighlightRules
    return

  oop.inherits Mode, TextMode
  exports.Mode = Mode
  return

# ---
# generated by js2coffee 2.1.0